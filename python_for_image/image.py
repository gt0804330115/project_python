# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np
import cv2
import os
import time

url = None


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(456, 323)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(320, 120, 75, 31))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(70, 120, 241, 31))
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 85, 231, 21))
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 456, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.textEdit.copyAvailable['bool'].connect(url)
        self.pushButton.clicked.connect(BatchRename.rename)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "执行"))
        self.label.setText(_translate("MainWindow", "图片所在文件夹"))


class BatchRename():
    def __init__(self):
        self.path = url  # 需更改文件地址，结尾需要有一定要有/

    @staticmethod
    def get_time():
        """
         获取日期编号
        Returns日期编号年月日
        -------

        """
        serial_num = int(time.strftime("%Y%m%d", time.localtime()))
        return serial_num

    def rename(self):
        filelist = os.listdir(self.path)  # 获取路径
        i = 1  # 图片初始名字
        for item in filelist:  # 利用for循环将filelist值赋予item内，循环执行
            if item.endswith('.jpg'):  # 用if检测文件结尾是否为.jpg，来判断是否是图片
                src = os.path.join(os.path.abspath(self.path), item)  # 定义原文件地址
                dst = url + "\\" + str(BatchRename.get_time()) + str("%02d" % i) + '.jpg'  # 新文件保存地址
                # img = cv2.imread(src, -1)  # 读取需要裁剪的图片(x,y)x=图片地址，y=读取方式
                img = cv2.imdecode(np.fromfile(src, dtype=np.uint8),
                                   cv2.IMREAD_ANYCOLOR)  # 读取需要裁剪的图片(x,y)x=图片地址，y=读取方式（中文路径读取）
                new_size = cv2.resize(img, (1500, 900))  # 图片裁剪大小，手动进行更改
                # cv2.imwrite(dst, new_size)  # 新图片的保存路径
                cv2.imencode('.jpg', new_size)[1].tofile(dst)  # 新图片的保存路径（中文路径保存）
                i += 1


import sys

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
